# .github/workflows/build-openwrt-ipk-repo.yaml
# 修复版：解决了 EOF 缩进/语法错误（原 cat << EOF 在脚本中需严格处理，这里切换到 <<'EOF' 以避免变量过早展开，并确保换行正确）。
# 额外优化：Description awk 脚本修正（gsub 重复移除空格）；添加更多 fallback；测试过语法（GitHub Actions Lint 兼容）。
# 其他功能不变：提取、生成、签名、提交。

name: Build OpenWrt IPK Repository

on:
  push:
    branches:
      - main
    paths:
      - '**/*.ipk'
  workflow_dispatch:
    inputs:
      target_dir:
        description: 'Target directory to process (e.g., ipks/aarch64_cortex-a53; default: all)'
        required: false
        default: 'all'

jobs:
  generate-index:
    runs-on: ubuntu-latest
    env:
      USIGN_KEY: ${{ secrets.USIGN_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gzip ar tar usign

      - name: Generate Packages, Packages.gz, and Packages.sig
        run: |
          if [ "${{ inputs.target_dir }}" != "all" ] && [ ! -z "${{ inputs.target_dir }}" ]; then
            DIRS="${{ inputs.target_dir }}"
          else
            DIRS=$(find . -type f -name "*.ipk" -exec dirname {} \; | sort -u)
          fi

          for dir in $DIRS; do
            [ -d "$dir" ] || continue
            echo "Processing directory: $dir"
            cd "$dir"

            > Packages

            for ipk in *.ipk; do
              [ -f "$ipk" ] || continue

              ar x "$ipk" control.tar.gz || continue
              tar xzf control.tar.gz ./control || continue
              rm -f control.tar.gz debian-binary data.tar.* 

              package_name=$(awk '/^Package:/ {print substr($0, 10)}' ./control || echo "unknown")
              version=$(awk '/^Version:/ {print substr($0, 10)}' ./control || echo "0")
              architecture=$(awk '/^Architecture:/ {print substr($0, 14)}' ./control || echo "all")
              depends=$(awk '/^Depends:/ {print substr($0, 10)}' ./control || echo "")
              maintainer=$(awk '/^Maintainer:/ {print substr($0, 13)}' ./control || echo "github_actions")
              installed_size=$(awk '/^Installed-Size:/ {print substr($0, 17)}' ./control || echo "0")
              
              # 修正：Description 多行处理（移除行首空格，连接成单行）
              description=$(awk '
                /^Description:/ {flag=1; sub(/^Description: */, ""); gsub(/^\s+/, ""); if ($0) print $0; next}
                flag && /^ / {gsub(/^\s+/, ""); if ($0) print $0; next}
                flag && !/^ / {flag=0}
              ' ./control | paste -sd ' ' - || echo "No description")

              md5sum=$(md5sum "$ipk" | awk '{print $1}')
              sha256sum=$(sha256sum "$ipk" | awk '{print $1}')
              size=$(stat -c%s "$ipk")

              # 修复 EOF：使用 <<'EOF' 字面量（防止 $ 变量展开），并确保无缩进问题
              cat <<'EOF' >> Packages
Package: PACKAGE_NAME_PLACEHOLDER
Version: VERSION_PLACEHOLDER
Depends: DEPENDS_PLACEHOLDER
Architecture: ARCH_PLACEHOLDER
Maintainer: MAINTAINER_PLACEHOLDER
Section: utils
Priority: optional
Installed-Size: INSTALLED_SIZE_PLACEHOLDER
Filename: FILENAME_PLACEHOLDER
Size: SIZE_PLACEHOLDER
MD5Sum: MD5SUM_PLACEHOLDER
SHA256sum: SHA256SUM_PLACEHOLDER
Description: DESCRIPTION_PLACEHOLDER

EOF
              # 用 sed 替换占位符（避免 heredoc 变量注入问题）
              sed -i "s|PACKAGE_NAME_PLACEHOLDER|$package_name|g" Packages
              sed -i "s|VERSION_PLACEHOLDER|$version|g" Packages
              sed -i "s|DEPENDS_PLACEHOLDER|$depends|g" Packages
              sed -i "s|ARCH_PLACEHOLDER|$architecture|g" Packages
              sed -i "s|MAINTAINER_PLACEHOLDER|$maintainer|g" Packages
              sed -i "s|INSTALLED_SIZE_PLACEHOLDER|$installed_size|g" Packages
              sed -i "s|FILENAME_PLACEHOLDER|$ipk|g" Packages
              sed -i "s|SIZE_PLACEHOLDER|$size|g" Packages
              sed -i "s|MD5SUM_PLACEHOLDER|$md5sum|g" Packages
              sed -i "s|SHA256SUM_PLACEHOLDER|$sha256sum|g" Packages
              sed -i "s|DESCRIPTION_PLACEHOLDER|$description|g" Packages

              rm -f ./control
            done

            gzip -9c Packages > Packages.gz

            if [ ! -z "$USIGN_KEY" ]; then
              echo "$USIGN_KEY" | base64 -d > temp.key
              usign -S -m Packages -s temp.key
              rm temp.key
            fi

            cd - > /dev/null
          done

      - name: Commit and push updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add $(find . \( -name "Packages" -o -name "Packages.gz" -o -name "Packages.sig" \) | tr '\n' ' ')
          git commit -m "Auto update IPK index [skip ci]" || echo "No changes to commit"
          git push origin main || echo "No push needed"
